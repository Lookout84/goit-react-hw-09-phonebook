{"version":3,"sources":["components/Container/Container.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/Phone/reducer.js","redux/store.js","index.js","redux/Auth/auth-actions.js","redux/Auth/auth-reducer.js","redux/Auth/auth-operations.js","redux/Auth/auth-selectors.js","redux/Phone/actions.js"],"names":["Container","children","className","Navigation","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","Nav","variant","activeKey","Item","Link","eventKey","as","NavLink","to","exact","UserMenu","dispatch","useDispatch","email","getUseremail","onLogOut","useCallback","authOperations","logOut","Form","inline","src","defaultAvatar","alt","width","Badge","Button","type","onClick","AuthNav","AppBar","Navbar","bg","PrivateRoute","Component","component","redirectTo","isAuthenticated","routeProps","render","props","PublicRoute","restricted","HomePage","lazy","PhoneBookPage","RegisterPage","LoginPage","App","useEffect","getCurrentUser","fallback","Spinner","animation","size","path","items","createReducer","actions","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","contact","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","filterContact","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","phoneReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","user","authActions","token","setError","error","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","post","response","data","message","logIn","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.84567dbb.chunk.js","sourcesContent":["import React from 'react';\r\n// import './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/Auth';\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Nav variant=\"pills\" className=\"justify-content-start\" activeKey=\"/home\">\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"1\" as={NavLink} to=\"/\" exact>\r\n          Home Page\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n\r\n      {isLoggedIn && (\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"2\" as={NavLink} to=\"/contacts\" exact>\r\n            Contacts\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      )}\r\n    </Nav>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/Auth';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport { Button, Badge, Form } from 'react-bootstrap';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(authSelectors.getUseremail);\r\n\r\n  const onLogOut = useCallback(() => {\r\n    dispatch(authOperations.logOut());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Form inline>\r\n        <img src={defaultAvatar} alt=\"\" width=\"32\" />\r\n        <Badge variant=\"dark\">\r\n          <span>{email}</span>\r\n        </Badge>{' '}\r\n        <Button variant=\"success\" type=\"button\" onClick={onLogOut}>\r\n          Logout\r\n        </Button>{' '}\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <div>\r\n      <Nav variant=\"pills\" className=\"justify-content-end\" activeKey=\"/auth\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"1\" as={NavLink} to=\"/register\" exact>\r\n            Registration\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"2\" as={NavLink} to=\"/login\" exact>\r\n            Login\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/Auth';\r\nimport PropTypes from 'prop-types';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Nav className=\"mr-auto\">\r\n          <Navigation />\r\n        </Nav>\r\n        {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nAppBar.propTypes = {\r\n  isLoggedIn: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/Auth';\r\n\r\nexport default function PrivateRoute({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { authSelectors } from '../redux/Auth';\r\n\r\nexport default function PublicRoute({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isLoggedIn && routeProps.restricted ? (\r\n          <Redirect to={redirectTo} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { Suspense, lazy, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Switch } from 'react-router-dom';\r\nimport Container from './components/Container';\r\nimport { authOperations } from './redux/Auth';\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst HomePage = lazy(() =>\r\n  import('./Views/HomePage' /* webpackChunkName: \"home-page\" */),\r\n);\r\n\r\nconst PhoneBookPage = lazy(() =>\r\n  import('./Views/PhoneBook' /* webpackChunkName: \"phonebook-page\" */),\r\n);\r\n\r\nconst RegisterPage = lazy(() =>\r\n  import('./Views/RegisterPage' /* webpackChunkName: \"register-page\" */),\r\n);\r\n\r\nconst LoginPage = lazy(() =>\r\n  import('./Views/LoginPage' /* webpackChunkName: \"login-page\" */),\r\n);\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <Suspense fallback={<Spinner animation=\"border\" size=\"sl\" />}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\" component={HomePage} />\r\n          <PrivateRoute\r\n            path=\"/contacts\"\r\n            redirectTo=\"/login\"\r\n            component={PhoneBookPage}\r\n          />\r\n          <PublicRoute\r\n            path=\"/register\"\r\n            restricted\r\n            redirectTo=\"/contacts\"\r\n            component={RegisterPage}\r\n          />\r\n          <PublicRoute\r\n            path=\"/login\"\r\n            restricted\r\n            redirectTo=\"/contacts\"\r\n            component={LoginPage}\r\n          />\r\n        </Switch>\r\n      </Suspense>\r\n    </Container>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport actions from './actions';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  // [actions.addNewContact]: (state, { payload }) => [...state, payload],\r\n  // [actions.deleteContact]: (state, { payload }) =>\r\n  //   state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.fetchContactsRequest]: () => true,\r\n  [actions.fetchContactsSuccess]: () => false,\r\n  [actions.fetchContactsError]: () => false,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccess]: () => false,\r\n  [actions.deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, loading, filter });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer, \r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport phoneReducer from './Phone/reducer';\r\nimport { authReducer } from './Auth';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: phoneReducer,\r\n  },\r\n  middleware,\r\n\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.getCurrentUserRequest]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthenticated,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUseremail = state => state.auth.user.email;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUseremail,\r\n};\r\n","// import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactsRequest');\r\nconst addContactSuccess = createAction('contacts/addContactsSuccess');\r\nconst addContactError = createAction('contacts/addContactsError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactsRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactsSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactsError');\r\n\r\nconst filterContact = createAction('contacts/FilterContact');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContact,\r\n};\r\n"],"sourceRoot":""}